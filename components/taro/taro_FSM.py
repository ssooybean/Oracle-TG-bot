from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, StateFilter

from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state, State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage

from keyboards.btns_thems_abstract import back_btn
from keyboards.taro_answer_btns_abstract import *
from keyboards.statics.taro_static_btns_for_FSM import taro_btns_static


storage = MemoryStorage()
taro_FSM_router = Router()


class FSMFillTaroForm(StatesGroup):
    fill_question = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    change_question = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ –∫ —Ç–∞—Ä–æ–ª–æ–≥—É


@taro_FSM_router.message(Command("stop"), ~StateFilter(default_state))
async def FSMstop(message: Message, state: FSMContext):
    data = await state.get_data()

    await message.answer("–ó–∞–ø—Ä–æ—Å –Ω–∞ —Ç–∞—Ä–æ –æ—Ç–º–µ–Ω–µ–Ω", reply_markup=back_btn(data["theme"]))
    await state.clear()


@taro_FSM_router.callback_query(F.data == "taro_cancel")
async def FSMcansel(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()

    await callback.message.edit_text(
        "–ó–∞–ø—Ä–æ—Å –Ω–∞ —Ç–∞—Ä–æ –æ—Ç–º–µ–Ω–µ–Ω", reply_markup=back_btn(data["theme"])
    )
    await state.clear()


# –í—ã–∑–æ–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–∑ —Ñ–∞–π–ª–∞ —Ç–µ–º—ã
# theme - –ø–µ—Ä–µ–¥–∞–µ–º —Ç–µ–º—É –≤—ã–∑–≤–∞–≤—à—É—é —Ñ—É–Ω–∫—Ü–∏—é, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –≤ –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –≤ –Ω—É–∂–Ω—É—é —Ç–µ–º—É
async def taro_start(callback: CallbackQuery, state: FSMContext, theme: str):
    await callback.message.answer(
        text="–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —Ä–∞—Å–∫–ª–∞–¥ –æ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–∞—Ä–æ–ª–æ–≥–∞üîÆ",
        reply_markup=intro_btns(),
    )

    await state.update_data(theme=theme)
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.set_state(FSMFillTaroForm.fill_question)
    await callback.answer()


@taro_FSM_router.callback_query(F.data == "get_taro", ~StateFilter(default_state))
async def taro_init_FSM(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text(
        text="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å",
    )
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.set_state(FSMFillTaroForm.fill_question)
    await callback.answer()


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≤–µ—Ä—à–∏–ª —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ç–∞—Ä–æ–ª–æ–≥–∞
@taro_FSM_router.message(
    StateFilter(FSMFillTaroForm.fill_question),
)
async def process_question_sent(message: Message, state: FSMContext):
    await state.update_data(question=message.text)
    user_data = await state.get_data()
    answer_text = f"""<b>–í–æ–ø—Ä–æ—Å:</b>\n{user_data['question']}"""

    await message.answer(text=answer_text, reply_markup=results_btn().as_markup())


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ö–æ—Ç–µ–ª –∏–∑–º–µ–Ω–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
@taro_FSM_router.callback_query(
    F.data == "taro_change_data", ~StateFilter(default_state)
)
async def process_change_data(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text(
        text="–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?",
        reply_markup=change_categories(taro_btns_static).as_markup(),
    )
    await callback.answer()


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –≤–≤–µ—Å—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
@taro_FSM_router.callback_query(
    F.data == "taro_question_for_change", ~StateFilter(default_state)
)
async def change_user_name(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer(text="–í–≤–µ–¥–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ")
    if callback.data == "taro_question_for_change":
        await state.set_state(FSMFillTaroForm.change_question)

    await callback.answer()


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
@taro_FSM_router.message(StateFilter(FSMFillTaroForm.change_question))
async def change_user_name(message: Message, state: FSMContext):
    await state.update_data(question=message.text)

    user_data = await state.get_data()
    answer_text = f"""<b>–í–æ–ø—Ä–æ—Å:</b>\n{user_data['question']}"""

    await message.answer(text=answer_text, reply_markup=results_btn().as_markup())


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
@taro_FSM_router.callback_query(F.data == "taro_send_data", ~StateFilter(default_state))
@taro_FSM_router.callback_query(
    F.data == "taro_send_without_change", ~StateFilter(default_state)
)
async def send_question_to_taroreader(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    await callback.message.edit_text(
        text="–í–∞—à –∑–∞–ø—Ä–æ—Å –∫ —Ç–∞—Ä–æ–ª–æ–≥—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –æ—Ç–≤–µ—Ç –ø—Ä–∏–¥–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤ –≤ —ç—Ç–æ—Ç —á–∞—Ç‚ú®üîÆ",
        reply_markup=back_btn(data["theme"]),
    )
    await state.clear()
